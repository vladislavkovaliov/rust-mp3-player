import { Button, VerticalBox, ListView, HorizontalBox } from "std-widgets.slint";

import {ToggleSwitch} from "./toggleSwitch.slint";
import {Progres} from "./progres.slint";
import {PlayButton} from "./playButton.slint";
import {OnlyPlayButton} from "./onlyPlayButton.slint";
import {SheetPanel} from "./sheetPanel.slint";
import { PauseButton } from "./pauseButton.slint";
import { StopButton } from "./stop.slint";
import { PrevButton } from "./prevButton.slint";
import { NextButton } from "./nextButton.slint";
import { EllipsisText } from "ellipsisText.slint";
import { OpenFolderButton } from "openFolder.slint";

export struct Record  {
    id: int,
    filePath: string,
    fileName: string,
    duration: string,
}

export component AppWindow inherits Window {
    in property <int> volume;

    in property <string> path: "";
    in property <[Record]> list: [];

    in-out property <bool> isPlaying: false;
    in-out property <bool> isPausing: false;
    in-out property <bool> expanded;

    in-out property <string> total_duration: "00:00";
    in-out property <string> current_duration: "00:00";

    in-out property <int> total_duration_secs: -1;
    in-out property <int> width_percentage: 0;
    in-out property <int> idPlaying: -1;
    in-out property <int> idPrevPlaying: -1;
    in-out property <int> idPausing: -1;

    callback selectPath();
    callback selectRecord(int, string);

    callback stop();
    callback play();
    callback pause();
    callback volumeUp();
    callback volumeDown();
    callback prev();
    callback next();

    width: 480px;
    height: 768px;
    background: white;

    VerticalLayout {
        Text {
            text: "Folder path: " + path;
            color: black;
            font-size: 16px;
            vertical-alignment: center;
            horizontal-alignment: center;
        }

        VerticalBox {
            Text {
                text: "total " + root.total_duration;
                font-size: 16px;
                color: black;
            }

            Text {
                text: "current " + root.current_duration;
                font-size: 16px;
                color: black;
            }

            Text {
                text: root.isPausing ? "pausing" : root.isPlaying ? "playing" : "stop";
                font-size: 16px;
                color: black;
            }

            Text {
                text: "volume = " + root.volume;
                font-size: 16px;
                color: black;
            }
        }

        HorizontalBox {
            Button {
                text: "volume up";
                clicked => {
                    root.volumeUp();
                }
            }

            Button {
                text: "volume down";
                clicked => {
                    root.volumeDown();
                }
            }
        }

        VerticalBox {
            HorizontalLayout {
                Text {
                    text: "Playlist";
                    font-size: 12px;
                    color: black;
                }

                TouchArea {
                    width: 16px;
                    height: 16px;
                    clicked => {
                        root.selectPath();
                    }
                    OpenFolderButton { }
                }
            }

            ListView {
                padding-top: 16px;

                for item in list: TouchArea {
                    VerticalLayout {
                        HorizontalLayout {
                            alignment: space-between;

                            HorizontalLayout {
                                TouchArea {
                                    width: 32px;
                                    height: 32px;
                                    clicked => {
                                        root.selectRecord(item.id, item.filePath);
                                    }
                                    PlayButton {
                                        id: item.id;
                                        idPlaying: root.idPlaying;
                                        isPausing: root.isPausing;
                                    }
                                }

                                Rectangle {
                                    width: 8px;
                                }

                                Text {
                                    text: item.fileName;
                                    color: black;
                                    font-size: 16px;
                                    vertical-alignment: center;
                                }
                            }

                            Text {
                                text: item.duration;
                                color: black;
                                font-size: 12px;
                                vertical-alignment: center;
                            }
                        }

                        Rectangle {
                            width: 100%;
                            height: 6px;

                            VerticalLayout {
                                Rectangle {
                                    height: 4px;
                                }

                                if root.idPlaying == item.id: Progres {
                                    width_percentage: root.width_percentage;
                                }
                            }
                        }

                        Rectangle {
                            height: root.idPlaying == item.id ? 24px : 8px;
                            animate height {
                                duration: 350ms;
                                easing: ease-in-out;
                            }
                        }
                    }
                }
            }
        }
    }

    Rectangle {
        width: 100%;
        height: 96px;
        background: white;
        y: !root.expanded ? parent.height - 48px : parent.height - 96px;

        animate y {
            duration: 300ms;
            easing: ease-in-out;
            delay: 350ms;
        }

        VerticalLayout {
            Rectangle {
                width: parent.width;
                height: 48px;
                background: rgb(254, 202, 202);

                HorizontalLayout {
                    padding-top: 8px;
                    padding-bottom: 8px;
                    padding-left: 8px;
                    padding-right: 8px;
                    alignment: space-between;

                    HorizontalLayout {
                        if root.idPlaying != -1: TouchArea {
                            width: 32px;
                            height: 32px;
                            clicked => {
                                if root.isPlaying == true {
                                    root.pause();
                                } else {
                                    root.play();
                                }
                            }
                            PlayButton {
                                id: root.idPlaying;
                                idPlaying: root.idPlaying;
                                isPausing: root.isPausing;
                            }
                        }

                        if root.idPlaying != -1: Rectangle {
                            width: 8px;
                        }

                        if root.idPlaying != -1: EllipsisText {
                            text: root.list[root.idPlaying].fileName;
                        }
                    }

                    TouchArea {
                        width: 32px;
                        height: 32px;
                        clicked => {
                            root.expanded = !root.expanded;
                        }
                        Rectangle {
                            width: 32px;
                            height: 32px;
                            if root.expanded == true: Image {
                                width: 16px;
                                height: 16px;
                                source: @image-url("../icons/arrowDown.svg");
                            }
                            if root.expanded == false: Image {
                                width: 16px;
                                height: 16px;
                                source: @image-url("../icons/arrowUp.svg");
                            }
                        }
                    }
                }
            }

            VerticalLayout {
                padding-top: 8px;
                padding-bottom: 8px;
                padding-left: 8px;
                padding-right: 8px;
                HorizontalLayout {

                    spacing: 8px;

                    TouchArea {
                        width: 32px;
                        height: 32px;
                        clicked => {
                            root.play();
                        }
                        OnlyPlayButton {
                            id: root.idPlaying;
                            idPlaying: root.idPlaying;
                            isPausing: root.isPausing;
                        }
                    }

                    TouchArea {
                        width: 32px;
                        height: 32px;
                        clicked => {
                            root.pause();
                        }
                        PauseButton {
                            id: root.idPlaying;
                            idPlaying: root.idPlaying;
                            isPausing: root.isPausing;
                        }
                    }

                    TouchArea {
                        width: 32px;
                        height: 32px;
                        clicked => {
                            root.stop();
                        }
                        StopButton {
                            id: root.idPlaying;
                            idPlaying: root.idPlaying;
                            isPausing: root.isPausing;
                        }
                    }

                    TouchArea {
                        width: 32px;
                        height: 32px;
                        clicked => {
                            root.prev();
                        }
                        PrevButton {
                            id: root.idPlaying;
                            idPlaying: root.idPlaying;
                            isPausing: root.isPausing;
                        }
                    }

                    TouchArea {
                        width: 32px;
                        height: 32px;
                        clicked => {
                            root.next();
                        }
                        NextButton {
                            id: root.idPlaying;
                            idPlaying: root.idPlaying;
                            isPausing: root.isPausing;
                        }
                    }
                }
            }
        }
    }
}
